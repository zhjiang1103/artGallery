openapi: 3.0.0
info:
  title: Financial Management API
  description: REST API of the back-end of Financial Management .
servers:
  - url: http://localhost:8080/api
    description: localhost
paths:
    /transactions/:email:
    get:
      summary: Get user's all transactions 
      description: Gets the list of all transactions info for the user
      responses:
        '200':
          description: The list of all transactions.
          content:
            application/json:
              schema:
                type: array
                
        '400':
          $ref: "Error"
    
    /transactions:
    post:
      summary: Create a user transaction
      description: Creates a new transaction for this User
      requestBody:
        description: The transaction to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "janetjiang03@gmail.com"
                type:
                  type: string
                  example: "savings"
                amount:
                  type: int
                  example: 4000
                month:
                  type: string
                  example: May
                year:
                  type: int
                  example: 2024
      responses:
        '201':
          description: The transaction object that was created
        '400':
          description: Error
          
  
  /goal/:email:
    get:
      summary: get financial goal info about the user
      
      responses:
        '200':
          description: all info about user's financial goal
        '400':
          description: Error

 /api/users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lastname:
                  type: string
                firstname:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - lastname
                - firstname
                - email
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastname:
                    type: string
                  firstname:
                    type: string
                  email:
                    type: string
                    format: email
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string         

 /api/transactions/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Transaction ID
    delete:
      summary: Delete a transaction
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Failed to delete transaction

    put:
      summary: Update a transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                type:
                  type: string
                amount:
                  type: integer
                month:
                  type: string
                year:
                  type: integer
              required:
                - email
                - type
                - amount
                - month
                - year
      responses:
        '200':
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_id:
                    type: integer
                  user_id:
                    type: integer
                  type:
                    type: string
                  amount:
                    type: integer
                  month:
                    type: string
                  year:
                    type: integer
        '500':
          description: Internal server error

  /api/goal/my:
    post:
      summary: Create a new financial goal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                goal:
                  type: string
                amount:
                  type: integer
              required:
                - email
                - goal
                - amount
      responses:
        '200':
          description: New goal created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_id:
                    type: integer
                  user_id:
                    type: integer
                  goal:
                    type: string
                  amount:
                    type: integer
        '400':
          description: Failed to create goal
    put:
      summary: Update a financial goal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                goal:
                  type: string
                amount:
                  type: integer
              required:
                - email
                - goal
                - amount
      responses:
        '200':
          description: Goal updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_id:
                    type: integer
                  user_id:
                    type: integer
                  goal:
                    type: string
                  amount:
                    type: integer
        '500':
          description: Internal server error 